import com.rameses.common.*;
import com.rameses.annotations.*;
import java.rmi.server.UID;

class CollectionInterceptor
{
	@Env
	def env;

	@ActiveDB("dailycollection")
	def em;

	@ActiveDB("collection_remittance")
	def remittance;

	@ActiveDB("collector_remarks")
	def collector_remarks;

	@ActiveDB('otherreceipt')
	def otherreceipt;

	@Service("DateService")
	def dateSvc;

	@After(pattern="LoanFieldCollectionService.post")
	public void afterFieldCollectionPost( evt ) {
		def params = evt.args[0];

		createDailyCollection(params.remittance);
	}

	@After(pattern="LoanOnlineCollectionService.post")
	public void afterOnlineCollectionPost( evt ) {
		def params = evt.args[0];

		createDailyCollection(params.remittance);
	}

	private void createDailyCollection( rmt ) {
		def rem = remittance.read(rmt);
		if (!rem) throw new Exception("Remittance record does not exist or has already been deleted.");

		if (rem.totalamount <= 0) return;

		def collection = em.findDailyCollectionByTxndate(rem);
		if (!collection) {
			collection = [
				objid			: 'DC' + new UID(),
				state			: 'DRAFT',
				txndate 		: rem.txndate,
				dtcreated		: dateSvc.serverDate,
				author			: [objid: env.USERID, name: env.NAME],
				totalcollection	: 0
			];
			em.create(collection);
		}

		def xlist = remittance.getPostedRemittancesByDate([date: rem.txndate]);
		xlist?.each{ o->
			if (!o.totalcollection) o.totalcollection = 0;
		}
		def tc = 0;
		def amt = xlist?.totalcollection?.sum();
		if (!amt) amt = 0;
		tc += amt;

		xlist = otherreceipt.getPostedCollectionByStardateAndEnddate([startdate: rem.txndate, enddate: rem.txndate]);
		amt = xlist?.totalamount?.sum();
		if (!amt) amt = 0;
		tc += amt;

		if (!tc) tc = 0;

		/*
		def list = remittance.getOthers(rem);
		def others = (list? list.amount.sum() : 0);
		if (!others) others = 0;
		*/

		//collection.totalcollection += (rem.totalamount + others);
		//collection.totalcollection += rem.totalamount;
		collection.totalcollection = tc;
		em.update(collection, "totalcollection");
	}


	@After(pattern='OtherReceiptService.postCollection')
	public void afterOtherReceiptPost( evt ) {
		def result = evt.result;

		def or = otherreceipt.read(result);
		if (!or) throw new Exception('Other Receipt record does not exist or has already been deleted.');

		if (or.totalamount <= 0) return;

		def collection = em.findDailyCollectionByTxndate([txndate: or.txndate]);
		if (!collection) {
			collection = [
				objid			: 'DC' + new UID(),
				state			: 'DRAFT',
				txndate 		: or.txndate,
				dtcreated		: dateSvc.serverDate,
				author			: [objid: env.USERID, name: env.NAME],
				totalcollection	: 0
			];
			em.create(collection);
		}

		def list = otherreceipt.getPostedCollectionByStardateAndEnddate([startdate: or.txndate, enddate: or.txndate]);
		def tc = 0 ;
		def amt = list?.totalamount?.sum();
		if (!amt) amt = 0;
		tc += amt;

		list = remittance.getPostedRemittancesByDate([date: or.txndate]);
		list?.each{ o->
			if (!o.totalcollection) o.totalcollection = 0;
		}
		amt = list?.totalcollection?.sum();
		if (!amt) amt = 0;
		tc += amt;

		if (!tc) tc = 0;
		collection.totalcollection = tc;
		em.update(collection, "totalcollection");
	}
}