import com.rameses.common.*;
import com.rameses.annotations.*;
import com.rameses.services.extended.*;

class SMSProviderService extends ActiveCrudListService
{
	@Env
	def env;

	@ActiveDB('sms_provider')
	def em;

	@Service('DateService')
	def dateSvc;

	@ProxyMethod
	public def getColumns( params ) {
		def cols = [];

		cols << [name: 'code', caption: 'Code'];
		cols << [name: 'dtcreated', caption: 'Date Created'];
		cols << [name: 'author.name', caption: 'Created By'];
		cols << [name: 'portname', caption: 'Port Name'];
		cols << [name: 'description', caption: 'Description'];

		return cols;
	}

	private def getUser() {
		return [objid: env.USERID, name: env.NAME];
	}

	void beforeCreate( data ) {
		data.dtcreated = dateSvc.serverDate;
		data.author = getUser();
	}

	void afterCreate( data ) {
		updatePrefix(data);
	}

	void afterUpdate( data ) {
		updatePrefix(data);
	}

	void updatePrefix( data ) {
		em.removePrefixesByProviderCode([code: data?.code]);

		data?.prefixes?.each{ o->
			if (!o.provider?.code) o.provider = [code: data?.code];
			em.create(o, 'prefix');
		}
	}

	void afterOpen( data ) {
		data?.prefixes = em.getPrefixesByProviderCode([code: data?.code]);
	}

}